@startuml diagramaDeClase

class Juego{
    -jugadorDeTurno: Integer
    -fase: Integer

    +reagruparEjercito(cantidadEjercitos:Integer, paisOrigen:String, paisDestino:String):void
    +atacarPais(paisAtacante:String, paisAtacado:String, cantidadEjercitos:Integer):void
    +pasarFase(): void
    -pasarTurno(): void
    -obtenerPais(unPais:String):Pais
    -agregarFichas():Void
}

class Batalla{

    +batallar(resultadosDadosAtacado,resultadosDadosAtacante): void
    +lanzarDados(cantidad): ArrayList
    -determinarPerdedor(dadoAtacante, dadoAtacado): Pais
    -ataqueEntrePaises(resultadosDadosAtacado,resultadosDadosAtacante): void
    -conquista(): void
}

class Pais{
    -nombre : String

    +serAtacadoPor(unPais):void
    +lePerteneceA(jugador):void
    +serConquistadoPor(conquistador):void
    +moverEjercitos(cantidadEjercitos,destino): void
    +agregarEjercitos(cantidad):void
}

class Objetivo{
    -descripcion:String

    +getDescripcion():String
    +cumplido(jugadorDeTurno, ejercitos):void
}

class Jugador{
    -nombre : String
    -id: Integer

    +reagruparEjercito(cantidadEjercitos, paisOrigen, paisDestino):void
    +autorizarBatalla(paisAtacado: Pais): void
    +objetivoCumplido(jugadorDeTurno):void
}

class LectorDeArchivos{
    -lector: FileReader
    -parser: JSONParser

    +{static}LectorDeArchivos(nombreArchivo:String):LectorDeArchivos
    +getContinentes():Hashtable
    +getCartas():ArrayList
    -getPaises():ArrayList
    -parsearPais(pais:JSONObject):Pais
    -parsearCarta(carta:JSONObject):Carta
}

class Continente{
    -nombre:String
    -recompensa:Integer

    +agregarPais(pais:Pais):void
    +getRecompensa():Integer
}

Juego "1"-down->"2..6" Jugador
Jugador "1"-down-"*" Pais
Jugador "1"-down->"1" Objetivo
Juego ..> Batalla
Batalla "1"-right->"2" Pais
Juego "1"-left->"1" LectorDeArchivos
Juego "1"-right->"6" Continente
Continente "1"-->"*"Pais

@enduml